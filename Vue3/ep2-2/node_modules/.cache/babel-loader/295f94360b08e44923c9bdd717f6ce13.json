{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"btn1\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", null, \"btn2\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", null, \"btn3\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", null, \"btn4\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", null, \"btn5\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_7);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;;;gCACNC,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;gCACAA,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;gCACAA,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;gCACAA,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;gCACAA,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;oBAJAC,YACAC,YACAC,YACAC,YACAC;;uBALFC,oBAMM,KANN,cAMMC,UANN","names":["id","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createElementBlock","_hoisted_7"],"sourceRoot":"","sources":["/Users/huanglangxuan/Desktop/Vue考试期末参考/Vue3/实验2 ES6 上（2）/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"container\">\n    <button>btn1</button>\n    <button>btn2</button>\n    <button>btn3</button>\n    <button>btn4</button>\n    <button>btn5</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  setup() {\n    let methods = {\n      button() {\n        let btn = document.getElementsByTagName(\"button\");\n        for (let i = 0; i < btn.length; i++) {\n          btn[i].addEventListener(\"click\", () => {\n            console.log(btn[i].innerHTML);\n          });\n        }\n      },\n    };\n\n    mounted(()=>{\n      methods()\n    })\n\n    return {\n      ...methods,\n      ...mounted,\n    };\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}